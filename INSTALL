Fair Warning
------------

Please be aware that hemp is still a work in progress.  I've been developing
on 64 bit OSX (Snow Leopard) and also testing on a 32 bit OSX machine (also
Snow Leopard, Intel Core Duo processor) and a 32 bit Linux machine (Ubuntu 
10.04).  On these platforms it should compile without warning and all but a
couple of tests should pass (although I'm still at the stage of adding, 
removing and changing things, so don't be surprised if they changes). 

I haven't tried compiling it on a windows machine yet.  At the very least
the dynamic loading code (dlopen(), etc) will need to be ported to the 
Windows equivalent.  I can't think of anything else off the top of my head
which I know will be broken, but there will undoubtedly be other things.



Instructions for Installing Hemp
--------------------------------

You first need to install CMake which handles the configuration, build and 
installation process.  You can download it from here:

    http://www.cmake.org/cmake/resources/software.html

Or you can install it using your favourite package manager (apt, ports, etc).

If you haven't already checked out the hemp source then you need to do that 
next.

    $ git clone git://github.com/abw/hemp.git
    $ cd hemp

It is recommended that you use the 'build' sub-directory for building hemp.
Run cmake in this directory, specifying '..' as an argument so that it can
find the relevant configuration files in the top-level hemp directory.

    $ cd build
    $ cmake ..

NOTE: CMake provides various different commands to use, depending on your
operating system.  For example, on Unix-like systems you can use 'ccmake'
instead of 'cmake' to enable the configuration manager.  On Windows there's
the CMakeSetup.exe application which provides a point-and-clicky thing so 
that you don't have to dirty yourself with the command line.  See this page 
for further information:

    http://www.cmake.org/cmake/help/runningcmake.html

One useful option you might want to know about is the one to specify a 
different installation path:

    $ cmake -DCMAKE_INSTALL_PREFIX:PATH=/installation/path

Then run make, make test, and make install (for which you'll probably need 
sudo to grant you write permission to the installation location).

    $ make
    $ make test
    $ sudo make install

NOTE: Hemp is not guaranteed to compile and/or pass all the tests on any
operating system...yet.  Consider yourself warned (again) that building hemp 
at this point in time may require a full beard, pair of sandals, an intimate
knowledge of C, your C compiler, and a fair bit of patience.  Or you might 
get lucky.

ANOTHER NOTE: Before you run 'make test' you should set the HEMP_MODULE_PATH
environment variable to the full path to the 'modules' sub-directory under the
hemp build directory.

    $ export HEMP_MODULE_PATH=/path/to/hemp/build/modules

Running 'make install' will install the hemp library, header files and the 
hemp program on your system.  The hemp program doesn't do anything useful yet, 
other that demonstrate that the program has compiled and linked correctly with 
the library.  

    $ hemp                              # stub program for now

You should be able to compile the hemp library into your own C programs.
Here's a simple example as a proof of concept:

    #include <stdio.h>
    #include <hemp.h>

    int main(int argc, char **argv, char **env) {
        hemp_hemp hemp = hemp_new();
        printf("created a hemp engine: %p\n", hemp);
        hemp_free(hemp);
        return 0;
    }

Assuming the above is saved in 'example.c', you would compile and link it
using a command something like this:

    $ gcc -o example -lhemp example.c

If the program compiles and run then you've successfully linked in the hemp
library.  Now you just have to twiddle your thumbs for a while until I've 
had the chance to add the functionality to makes it useful and usuable.


Platform-Specific Notes
-----------------------

Linux
-----

If you get a CMake error saying something like this:

  your CXX compiler: "CMAKE_CXX_COMPILER-NOTFOUND" was not found.

Then it probably means you haven't got the C++ compiler extensions
for gcc installed.  We're not using C++, but I haven't figured out
how to tell CMake that.  For now, just do this (or equivalent)

  $ sudo apt-get install g++

You'll also need the readline library and development header files

  $ sudo apt-get install libreadline-dev


OSX
---

You'll need to install the developer tools that come on the operating
system DVD provided with your machine (or download them from Apple's web 
site).

It is also recommended that you install macports.  See:

    http://macports.org

With macports installed you can then install the readline library and 
cmake like so:

    $ sudo port install readline cmake

If you've already got readline installed, or if you're using some other
package manager (e.g. fink/apt) then you don't need macports.

Then you should be good to go.


-- Andy Wardley (abw), December 2010

