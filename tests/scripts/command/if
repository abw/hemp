-- test if True
%% if True "Hello World"
-- expect
Hello World

-- test if False
Before
%% if False "Hello World" "A"
fter
-- expect
Before
After

-- test if with single expression
%% if False "Hello World" 4 '2' "0"
-- expect
420

-- test if with boolean ops, true
%% if False or True "Hello World"
-- expect
Hello World

-- test if with boolean ops, false
Before
%% if True and True and False "Hello World"
After
-- expect
Before
After

-- test if with semi-colons and end, true
[% if True;
     "Hello World";
   end
%]
-- expect
Hello World

-- test if with semi-colons and end, false
Before[% if False; "Hello World"; end %]
After
-- expect
Before
After

-- test if with boolean ops, false
Before
%% if True and True and False "Hello World"
After
-- expect
Before
After

-- test if with braces
[% if True { "Hello World" } %]
-- expect
Hello World

-- test if with separate tags
[% if True %]Hell[% 'o W' %]orld[% end %]
-- expect
Hello World

-- test if yielding value
%%  x = if True "Hello World";
%%  y = (if False "Goodbye World");
Foo
[% x %]![% y %]
-- expect
Foo
Hello World!

-- test if yielding value
%%  x = if True "Hello World";
%%  y = (if False "Goodbye World");
Foo
[% x %]![% y %]
-- expect
Foo
Hello World!

-- test if yielding values
%%  list = [if True "Hello"; if True "World"; if False "Blah"]
%%  list.length " items: " list.text
-- expect
2 items: HelloWorld

-- test if with else, true
%% if True "foo" else "bar"
-- expect
foo

-- test if with else, false
%% if False "foo" else "bar"
-- expect
bar

-- test if with else block to end
%% if False "foo" else; "b" 'a' "r"; end
-- expect
bar

-- test if with else block and separate tags
[% if False "foo" else %]b[% 'a' %]r[% end %]
-- expect
bar

-- test if with else block and curly braces
[%  if False {
        "foo" 
    }
    else {
        "bar"
    }
%]
-- expect
bar

-- test multiple ifs
[%  if False {
        "foo" 
    }
    else if True {
        "bar"
    }
    else if Whatever {
        "baz"
    }
%]
-- expect
bar

-- test multiple ifs with single expressions
[%  if False
        "foo" 
    else if True
        "bar"
    else if Whatever
        "baz"
%]
-- expect
bar

-- test multiple ifs with single expressions and semi-colons
[%  if False;
        "foo"; 
    else if True;
        "bar";
    else if Whatever;
        "baz";
    end;
%]
-- expect
bar

-- test elsif with end
[%  if False;
        "FAIL";
    elsif True;
        "PASS";
    end;
%]
-- expect
PASS

-- test elsif with single expression
[%  if False
        "FAIL"
    elsif True
        "PASS"
%]
-- expect
PASS

-- test elsif with braced blocks
[%  if False {
        "FAIL"
    }
    elsif True {
        "PASS"
    }
%]
-- expect
PASS

-- test multiple elsifs with semi-colons and end
[%  if False;
        "FAIL";
    elsif False and False;
        "FAIL";
    elsif True;
        "PASS";
    elsif True and False;
        "FAIL";
    else;
        "FAIL";
    end
%]
-- expect
PASS


-- test multiple elsifs with single expressions
[%  if False
        "FAIL"
    elsif False and False
        "FAIL"
    elsif True
        "PASS"
    elsif True and False
        "FAIL"
    else
        "FAIL"
%]
-- expect
PASS

-- test multiple elsifs with braced blocks
[%  if False {
        "FAIL"
    }
    elsif False and False {
        "FAIL"
    }
    elsif True {
        "PASS"
    }
    elsif True and False {
        "FAIL"
    }
    else {
        "FAIL"
    }
%]
-- expect
PASS

-- test multiple elsifs with separate outline tags
%%  if False
FAIL
%%  elsif False and False     
FAIL
%% elsif True  # a comment, just to confuse things
PASS
%% elsif True and False
FAIL
%% else
FAIL
%% end
-- expect
PASS

-- test multiple elsifs with separate inline tags
[%  if False %]
FAIL
[%  elsif False and False %]
FAIL
[% elsif True %]
PASS
[% elsif True and False %]
FAIL
[% else %]
FAIL
[% end %]
-- expect

PASS

-- test multiple elsifs with a bastard hybrid of styles
[%  
    # if you write code like this then you are a bad person

    if False
        "FAIL"
    elsif False and False;
        "FAIL";
    elsif True {
        "PASS"
    }
    elsif True and False
        "FAIL"
    else;
        "FAIL"
    end

%]
-- expect
PASS

-- test single expression with comments
[%  if True 
        # this is a comment
        "PASS"
    else
        # so is this
        "FAIL"
%]
-- expect
PASS


-- test comments in expression
[%  
    if          # this is a comment
        True    # so is this
                # and this
        and False
                # yet another comment
            "FAIL"
                # Hi-ho, hi-ho,
    else        # it's off to hemp we go!
        "PASS"  # you win!

%]
-- expect
PASS


-- test side-effect if
%% "PASS" if True
%% "FAIL" if False
-- expect
PASS

-- test multiple side-effect if
%% "PASS" if True if True
%% "FAIL" if False if True
%% "FAIL" if True if False
-- expect
PASS

-- test nested if
[%  if True;
        if True;
            "PASS";
        end;

        if False;
            "FAIL";
        end;

    end;
%]
-- expect
PASS

-- test nested if with separate tags
%%  if True
[%      if True;
            "PASS";
        end;
%][%
        if False;
            "FAIL";
        end;
%]
%%  end;
-- expect
PASS

-- test nested if with braces
[%  if True {
        if True  { "PASS" }
        if False { "FAIL" }
    }
%]
-- expect
PASS


-- test if with end fragment
[%  if True;
        "PASS";
    end#if;
%]
-- expect
PASS

-- test if with wrong fragment
[%  if True;
        "FAIL";
    end#fi;
%]
-- error
Error at line 3, column 7 of text:
   Error: Fragment mismatch: if vs end#fi
  Source:     end#fi;
                 ^ here

-- test if with start fragment only
[%  if#foo True;
        "PASS";
    end;
%]
-- expect
PASS


-- test if with start and end fragments
[%  if#foo True;
        "PASS";
    end#foo;
%]
-- expect
PASS

-- test if with nested fragments
[%  if#outer True;
        if#inner True;
            "PASS";
        end#inner;
    end#outer;
%]
-- expect
PASS

-- test if with fragment mis-match
[%  if#foo True;
        "PASS";
    end#bar;
%]
-- error
Error at line 3, column 7 of text:
   Error: Fragment mismatch: if#foo vs end#bar
  Source:     end#bar;
                 ^ here

-- test missing expression error
%% if
-- error
Error at line 1, column 3 of text:
   Error: Missing expression for 'if'
  Source: %% if
             ^ here

-- test missing block
%% if x
-- error
Error at line 1, column 3 of text:
   Error: Missing body for 'if'
  Source: %% if x
             ^ here
-- test unterminated block
%% if x; y
-- error
Error at line 1, column 3 of text:
   Error: Incomplete 'if' expression, missing closing 'end'
  Source: %% if x; y
             ^ here


