-- test single string
[% "Hello\nWorld!" %]
-- expect
Hello
World!

-- test single quoted strings
[% 'foo' ' ' 'foo bar' '' %]

-- expect
foo foo bar

-- test single quoted strings with escapes
[% 'Tom O\'Tommy' ' and ' 'foo\\bar' ' and ' 'wiz\bang' %]

-- expect
Tom O'Tommy and foo\bar and wiz\bang


-- test double quoted strings
[% "foo" " foo bar" "" %]

-- expect
foo foo bar


-- test double quoted strings with escapes
[% "foo\\bar" %] [% "new\nline" %] [% "tab\tstop" %] [% "11\" long" %]

-- expect
foo\bar new
line tab	stop 11" long


-- test multiple tags
Some text [% 123 %] more text [% '456' %]

-- expect --
Some text 123 more text 456

-- stop 

# This test kinda passes, in that an error is output and we have some position
# information.  But the error message needs cleaning up.

-- test unterminated single quoted string
[% 'oops %] oh dear!
-- error
Hemp syntax error at line 1 of "unterminated single quoted string" test:
    Error: Unterminated quoted string: 'oops 
   Source: [% 'oops %] oh dear!
              ^ here

# NOTE: the next test only passes when a dedicated q<< >> quote operator
# is forced into the grammar.  Need to figure out a nice way for test 
# scripts to add these things, but that all depends on a general 
# configuration mechanism that I haven't figured out yet.

-- test single quoted strings with multi-character start/end tokens
[% q<<foo>> q<< >> q<<foo'boo'bar>> %]

-- expect
foo foo'boo'bar


-- test unterminated double quoted string
TODO: [%# "cripey! %]




